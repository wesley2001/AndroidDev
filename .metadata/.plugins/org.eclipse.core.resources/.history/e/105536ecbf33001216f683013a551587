package com.libary;

import android.content.Context;
import android.opengl.GLSurfaceView;
import android.util.Log;
import android.view.GestureDetector;
import android.view.GestureDetector.OnGestureListener;
import android.view.MotionEvent;

class MyGLSurfaceView extends GLSurfaceView{
	GestureDetector mDetector;
	
    public MyGLSurfaceView(Context context){
        super(context);
        
        mDetector = new GestureDetector(this.getContext(), new mListener());
        
        // Create an OpenGL ES 2.0 context
        this.setEGLContextClientVersion(2);
        this.setRenderer(new MyRenderer());
        //this.setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
    }
    
    @Override
    public boolean onTouchEvent(MotionEvent e) {
    	super.onTouchEvent(e);

        requestRender();
        
    	  boolean result = mDetector.onTouchEvent(e);
    	  
    	   if (!result) {
    	       if (e.getAction() == MotionEvent.ACTION_UP) {
    	    	   Log.d("test", "just testing");
    	           result = true;
    	       }
    	   }
    	   return result;
    }
}

class mListener extends GestureDetector.SimpleOnGestureListener {
	@Override
	public boolean onDown(MotionEvent e) {
		
		return true;
	}
	
	@Override
	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
	    final float distanceTimeFactor = 0.4f;  
	    final float totalDx = (distanceTimeFactor * velocityX/2);  
	    final float totalDy = (distanceTimeFactor * velocityY/2); 
	    
		
		return true;
	}
	
	@Override
	public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {

		Log.d("eyeX", MyRenderer.eyeX + "");
		Log.d("eyeZ", MyRenderer.eyeZ + "");
		
		MyRenderer.eyeX += distanceX;
		MyRenderer.eyeZ += distanceY;
		
		
		
		return true;
	}
}